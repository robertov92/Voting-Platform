{"version":3,"sources":["components/Button.js","index.js","pages/Home.js","pages/CreatePoll.js","pages/ViewPoll.js"],"names":["Button","children","onClick","className","ReactDOM","render","StrictMode","to","exact","path","component","useState","polls","setPolls","useEffect","JSON","parse","localStorage","getItem","map","poll","key","id","title","setTitle","choices","setChoices","errors","setErrors","success","setSuccess","updatePollsToLocalStorage","successData","existingPolls","updatedPolls","pollId","setItem","stringify","createPoll","a","fetch","method","headers","body","response","json","data","ok","process","REACT_APP_APP_URL","length","error","index","message","htmlFor","onChange","event","target","value","name","type","choice","newChoices","choiceIndex","onChoiceChange","filter","removeChoice","match","ip","setIp","setPoll","voted","setVoted","fetchPoll","params","fetchClientIpAddress","vote","console","log","getTotalVotes","totalVotes","forEach","count","_id","selectedChoice","Math","round","getChoicePercentage","document","getElementById"],"mappings":"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","file":"static/js/main.c38bc5c3.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Button({ children, onClick }) {\n    return (\n        <button onClick={onClick} className='bg-blue-600 text-white px-3 py-2 border border-blue-600 active:border-blue-700 text-sm rounded-sm hover:bg-blue-700 transition duration-150 ease-in-out'>{children}</button>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport ViewPoll from './pages/ViewPoll'\nimport CreatePoll from './pages/CreatePoll'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <div className=\"w-full h-screen\">\n        <div className=\"h-16 w-full bg-gray-800 flex items-center\">\n            <div className=\"container mx-auto px-5\">\n              <Link to='/' className='text-white cursor-pointer hover:text-gray-400 transition duration-150 mr-3'>Home</Link>\n              <Link to='/polls/create' className='text-white cursor-pointer hover:text-gray-400 transition duration-150 mr-3'>Create Poll</Link>\n            </div>\n        </div>\n\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/polls/create' component={CreatePoll} />\n          <Route path='/polls/:poll' component={ViewPoll} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Home() {\n    const [polls, setPolls] = useState([])\n    \n    useEffect(() => {\n        const polls = JSON.parse(\n            localStorage.getItem('polls')\n        ) || []\n\n        setPolls(polls)\n    }, [])\n\n    return (\n        <div className='container mx-auto px-5'>\n            <h1 className='text-5xl text-center my-10'>Welcome to the Voting Platform</h1>\n\n            <div className=\"w-full max-w-3xl mx-auto bg-white shadow\">\n                    {polls.map(poll => (\n                        <div key={poll.id} className='w-full px-4 py-4 border-b border-gray-400 flex justify-between'>\n                            {poll.title}\n\n                            <Link className='cursor-pointer hover:text-blue-600 text-blue-500'  to={`/polls/${poll.id}`}>View poll</Link>\n                        </div>\n                    ))}\n            </div>\n        </div>\n    )\n}\n","import { Link } from 'react-router-dom';\nimport React, { useState, Fragment } from 'react'\n\nexport default function CreatePoll() {\n    const [title, setTitle] = useState('')\n    const [choices, setChoices] = useState([''])\n    const [errors, setErrors] = useState([])\n    const [success, setSuccess] = useState({})\n\n    const addAnswer = () => {\n        setChoices([\n            ...choices,\n            ''\n        ])\n    }\n\n    const removeChoice = (index) => {\n        const newChoices = choices.filter((choice, choiceIndex) => {\n            return choiceIndex !== index\n        })\n\n        setChoices(newChoices)\n    }\n\n    const onChoiceChange = (index, value) => {\n        const newChoices = choices.map((choice, choiceIndex) => {\n            if (choiceIndex === index) {\n                return value\n            }\n\n            return choice\n        })\n\n        setChoices(newChoices)\n    }\n\n    const updatePollsToLocalStorage = (successData) => {\n        const existingPolls = JSON.parse(localStorage.getItem('polls')) || []\n\n        const updatedPolls = [\n            ...existingPolls,\n            {\n                title,\n                id: successData.pollId\n            }\n        ]\n\n        localStorage.setItem('polls', \n        JSON.stringify(updatedPolls))\n    }\n\n    const createPoll = async () => {\n        const response = await fetch(`http://3.97.6.204:4000/polls`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title,\n                choices\n            })\n        })\n\n\n        const data = await response.json()\n\n        if (! response.ok) {\n            setErrors(data)\n\n            return\n        }\n\n        setSuccess(data)\n        updatePollsToLocalStorage(data)\n    }\n\n    return (\n        <div className=\"container mx-auto my-16 md:my-32 px-6 \">\n          <div className=\"w-full max-w-3xl mx-auto rounded shadow-md bg-white\">\n              <header className=\"border-b border-gray-400 px-8 py-5 text-gray-800\">\n                Create poll\n              </header>\n\n              {success.pollId ? (\n                  <div className=\"py-5 px-8\">\n                      <div className=\"w-full mb-2 bg-green-100 text-green-500 border border-green-500 rounded py-3 px-2\">\n                          Poll created successfully. <Link to={`/polls/${success.pollId}`}>\n                              {process.env.REACT_APP_APP_URL}/polls/{success.pollId}\n                          </Link>\n                      </div>\n                  </div>\n              ) : null}\n\n              {!success.pollId ? (\n                  <div className=\"py-5 px-8\">\n                  {errors.length > 0 ? (\n                      <Fragment>\n                          {errors.map((error, index) => (\n                              <p key={index} className='w-full mb-2 bg-red-500 text-white py-3 px-2 rounded'>{error.message}</p>\n                          ))}\n                      </Fragment>\n                  ): null}\n                  <div className=\"mb-6\">\n                      <label htmlFor=\"title\" className=\"text-sm mb-2 inline-block\">Enter the title of the poll</label>\n                      <input onChange={(event) => setTitle(event.target.value)} value={title}  name='title' id='title' type=\"text\" className='w-full py-2 border border-gray-400 rounded px-4' />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label className=\"text-sm mb-2 inline-block\">Enter all the possible answers for this poll</label>\n                    {choices.map((choice, index) => (\n                        <div key={index} className=\"w-full flex items-center mb-2\">\n                            <input onChange={(event) => onChoiceChange(index, event.target.value)} key={index} type=\"text\" value={choice} className='w-full py-2 border border-gray-400 rounded px-4' />\n                            <button onClick={() => removeChoice(index)} className='py-2 ml-2 px-3 bg-red-500 text-white rounded hover:bg-red-600'>Remove</button>\n                        </div>\n                    ))}\n                  </div>\n\n                  <button onClick={addAnswer} className='bg-blue-600 text-white px-3 py-2 border border-blue-600 active:border-blue-700 text-sm rounded-sm hover:bg-blue-700 transition duration-150 ease-in-out'>Add choice</button>\n\n                  <div className=\"mt-12 mb-6 text-center\">\n                    <button onClick={createPoll} className='bg-blue-600 text-white px-3 py-2 border border-blue-600 active:border-blue-700 text-sm rounded-sm hover:bg-blue-700 transition duration-150 ease-in-out'>Create Poll</button>\n                  </div>\n              </div>\n              ) : null}\n          </div>\n       </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport Button from '../components/Button'\n\nexport default function ViewPoll({ match }) {\n    const [ip, setIp] = useState(null)\n    const [poll, setPoll] = useState(null)\n    const [voted, setVoted] = useState(false)\n\n    const fetchPoll = async () => {\n        const response = await fetch(`http://3.97.6.204:4000/polls/${match.params.poll}`)\n\n        const data = await response.json()\n\n        setPoll(data)\n    }\n\n    const fetchClientIpAddress = async () => {\n        const response = await fetch('https://api.ipify.org?format=json')\n\n        const data = await response.json()\n\n        setIp(data.ip)\n    }\n\n    useEffect(() => {\n        fetchPoll()\n    }, [voted])\n\n    useEffect(() => {\n        fetchClientIpAddress()\n    }, [])\n\n    const vote = async (choice) => {\n        console.log(ip);\n        console.log(choice);\n        await fetch(`http://3.97.6.204:4000/polls/${match.params.poll}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                ip,\n                choice\n            })\n        })\n\n        setVoted(true)\n    }\n\n    const getTotalVotes = () => {\n        let totalVotes = 0\n\n        poll.choices.forEach(choice => {\n            totalVotes += choice.count\n        })\n\n        return totalVotes\n    }\n\n    const getChoicePercentage = (selectedChoice) => {\n        const totalVotes = getTotalVotes()\n\n        if (totalVotes === 0) {\n            return 0\n        }\n        \n        return Math.round((selectedChoice.count / totalVotes) * 100)\n    }\n\n    return (\n        <div className=\"container mx-auto mt-16 px-5\">\n            <h1 className=\"my-5 text-3xl text-center\">\n                Welcome to the Voting Platform\n            </h1>\n\n            {poll ? (\n                <div className=\"w-full max-w-3xl mx-auto bg-white shadow\">\n                    <header className='px-5 py-4 flex justify-between items-center'>\n                        {poll.title}\n\n                        {voted && <span>{getTotalVotes()} votes</span>}\n\n                        <Button onClick={() => setVoted(true)}>View results</Button>\n                    </header>\n\n                    {poll.choices.map(choice => {\n                        return (\n                            <div className='px-5 py-4 border-t border-gray-400 flex justify-between items-center' key={choice._id}>\n                                {choice.name}\n\n                                {voted ? (\n                                    <span className='text-blue-500'> {getChoicePercentage(choice)}% </span>\n                                ) :  <Button onClick={() => vote(choice._id)}>Vote</Button>}\n                            </div>\n                        )\n                    })}\n                </div>\n            ) : null}\n        </div>\n    )\n}\n"],"sourceRoot":""}